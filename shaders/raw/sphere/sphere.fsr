$input v_position, v_texcoord0, v_normal

#include "common.sh"

SAMPLER2D(t_diffuse, 0);

uniform vec4 u_directionalLightDir[1];
uniform vec4 u_directionalLightColor[1];

uniform vec4  u_cameraPos;


void main()
{
	const float shininess = 16.0;

	vec4 viewDir = normalize(vec4(u_cameraPos.xyz, 1) - v_position) * u_cameraPos.w + mul(u_invView, vec4(0, 0, -1, 0)) * (1 - u_cameraPos.w);
	vec4 lightDir = normalize(-vec4(u_directionalLightDir[0].xyz, 0));

	vec4 lightColorDiff = UnpackColor(u_directionalLightColor[0].x);
	vec4 lightColorSpec = UnpackColor(u_directionalLightColor[0].y);

	vec4 matColorDiff = texture2D(t_diffuse, v_texcoord0);
	vec4 matColorSpec = vec4(1, 1, 1, 1);
	
	vec4 color = ComputeBlinnPhong(vec4(v_normal, 0), viewDir, lightDir, lightColorDiff, lightColorSpec, matColorDiff, matColorSpec, shininess);
	
	gl_FragColor = color;
}
